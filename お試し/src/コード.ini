main.py
import flet as ft
from app_layout import AppLayout
from sidebar import Sidebar

class TrelloApp(AppLayout):
    def __init__(self, page:ft.Page):
        # アプリウィンドウを保持
        self.page = page
        
        # ヘッダーに配置するメニュー
        self.appbar_items = [
            ft.PopupMenuItem(text="Login"),
            ft.PopupMenuItem(), # divider
            ft.PopupMenuItem(text="Settings"),
        ]
        
        # ヘッダー
        self.appbar = ft.AppBar(
            leading=ft.Icon(ft.icons.GRID_GOLDENRATIO_ROUNDED),
            leading_width=100,
            title=ft.Text("Trolli", size=32, text_align="start"),
            toolbar_height=75,
            bgcolor=ft.colors.LIGHT_BLUE_ACCENT_700,
            actions=[
                ft.Container(
                    content=ft.PopupMenuButton(
                        items=self.appbar_items
                    ),
                    margin=ft.margin.only(left=50, right=25)
                )
            ]
        )
        
        # ヘッダー配置
        self.page.appbar = self.appbar
        self.page.update()
        
        # 
        super().__init__(
            self,
            self.page,
            tight=True,
            expand=True,
            vertical_alignment="start",
        )

if __name__  == "__main__":
    
    def main(page: ft.Page):
        page.title = "Flet Trello clone"
        page.padding = 0
        page.bgcolor = ft.colors.BLUE_GREY_200
        app = TrelloApp(page)
        page.add(app)
        
    ft.app(main, view=ft.WEB_BROWSER)
    
    
app_layout.py
import flet as ft
from sidebar import Sidebar

class AppLayout(ft.Row):
    def __init__(self, app, page:ft.Page, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.app = app
        # window提供変数
        self.page = page
        
        # サイドバーを折りたたむボタン
        self.toggle_nav_rail_button = ft.IconButton(
            icon=ft.icons.ARROW_CIRCLE_LEFT,
            icon_color=ft.colors.BLUE_GREY_400,
            selected=False,
            selected_icon=ft.icons.ARROW_CIRCLE_RIGHT,
            on_click=self.toggle_nav_rail
        )
        # サイドバー
        self.sidebar = Sidebar(self, page)
        
        # メインコンテンツ
        self._active_view :ft.Control = ft.Column(
            controls=[ft.Text("Active View")],
            alignment="center",
            horizontal_alignment="center",
            )
        
        self.controls = [
            self.sidebar,
            self.toggle_nav_rail_button,
            self._active_view
            ]

    @property
    def active_view(self):
        return self._active_view
    
    @active_view.setter
    def active_view(self, view):
        self._active_view = view
        self.update()
    
    def toggle_nav_rail(self, e):
        self.sidebar.visible = not self.sidebar.visible
        self.toggle_nav_rail_button.selected = not self.toggle_nav_rail_button.selected
        self.page.update()
        
sidebar.py
import flet as ft
 

class Sidebar(ft.UserControl):
 
    def __init__(self, app_layout, page):
        super().__init__()
        self.app_layout = app_layout
        self.page = page
        self.top_nav_items = [
            ft.NavigationRailDestination(
                label_content=ft.Text("Boards"),
                label="Boards",
                icon=ft.icons.BOOK_OUTLINED,
                selected_icon=ft.icons.BOOK_OUTLINED
            ),
            ft.NavigationRailDestination(
                label_content=ft.Text("Members"),
                label="Members",
                icon=ft.icons.PERSON,
                selected_icon=ft.icons.PERSON
            ),
 
        ]
        self.top_nav_rail = ft.NavigationRail(
            selected_index=None,
            label_type="all",
            on_change=self.top_nav_change,
            destinations=self.top_nav_items,
            bgcolor=ft.colors.BLUE_GREY,
            extended=True,
            expand=True
        )
        
    def build(self):
        self.view = ft.Container(
            content=ft.Column([
                ft.Row([
                    ft.Text("Menu"),
                ]),
                # divider
                ft.Container(
                    bgcolor=ft.colors.BLACK26,
                    border_radius=ft.border_radius.all(30),
                    height=1,
                    alignment=ft.alignment.center_right,
                    width=220
                ),
                self.top_nav_rail,
                # divider
                ft.Container(
                    bgcolor=ft.colors.BLACK26,
                    border_radius=ft.border_radius.all(30),
                    height=1,
                    alignment=ft.alignment.center_right,
                    width=220
                ),
            ], tight=True),
            padding=ft.padding.all(15),
            margin=ft.margin.all(0),
            width=250,
            bgcolor=ft.colors.BLUE_GREY,
        )
        return self.view
 
    def top_nav_change(self, e):
        self.top_nav_rail.selected_index = e.control.selected_index
        self.update()